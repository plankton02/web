{"ast":null,"code":"var _jsxFileName = \"/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './Tokens/abi'; //nft\n\nimport React, { Component } from 'react';\nimport ConnectBtn from './Components/ConnectBtn';\nimport LockToken from './Components/LockToken';\nimport UnlockToken from './Components/UnlockToken';\nimport Web3Modal from \"web3modal\"; //import ConnectButton from \"./Components/ConnectButton\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.bChainId = '0x61';\n    this.bNetworkId = 97;\n    this.state = {\n      isConnected: false,\n      isLocked: false,\n      contractInstance: null,\n      account: null,\n      isLoading: false,\n      chainId: 0,\n      //bsc testnet\n      networkId: '0',\n      //bsc testnet\n      contractAddress: '0xa4a8d3E5A436EE537c83f83c9b70E91242e7a8D7',\n      isLoading: false\n    };\n    const providerOptions = {};\n    this.web3Modal = new Web3Modal({\n      network: \"mainnet\",\n      // optional\n      cacheProvider: true,\n      // optional\n      providerOptions // required\n\n    });\n    this.connectMetamask = this.connectMetamask.bind(this);\n    this.lockToken = this.lockToken.bind(this);\n    this.unlockToken = this.unlockToken.bind(this);\n    this.isTokenLocked = this.isTokenLocked.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.web3Modal.cachedProvider) {\n      this.onConnect();\n    }\n  }\n\n  componentDidUpdate() {}\n\n  async onConnect() {\n    // get metamask provider\n    this.web3Modal.connect().then(res => {\n      if (window.ethereum) {\n        this.provider = window.ethereum;\n      } else if (window.web3) {\n        this.provider = window.web3.currentProvider;\n      } else {\n        this.provider = new Web3.providers.HttpProvider('http://localhost:8545');\n      }\n\n      this.subscribeProvider(); // creste web3 with current provider\n\n      this.web3 = new Web3(this.provider); // retreive account info\n\n      this.web3.eth.getAccounts().then(res => {\n        // create contract instance\n        const contract = new this.web3.eth.Contract(contractAbi, this.state.contractAddress); // get network chain and check token status\n\n        this.getChain();\n        this.setState({\n          account: res[0],\n          contractInstance: contract,\n          isConnected: true\n        });\n      }).catch(err => {\n        console.log(\"err getAccount: \" + err);\n      });\n    }).catch(err => {\n      console.log(\"err web3Modal.connect: \" + err);\n    });\n  }\n\n  async getChain() {\n    const chainId = await this.web3.eth.getChainId();\n    const networkId = await this.web3.eth.net.getId();\n    await this.setState({\n      chainId: chainId,\n      networkId: networkId\n    });\n    this.isTokenLocked();\n  }\n\n  isTokenLocked() {\n    if (this.checkNetworkChain()) {\n      this.setState({\n        isLoading: true\n      });\n      this.state.contractInstance.methods.isLocked().call({\n        from: this.state.account\n      }).then(receipt => {\n        console.log(\"isTokenLocked receipt:\");\n        console.log(receipt);\n        this.setState({\n          isLocked: receipt,\n          isLoading: false\n        });\n      }).catch(err => {\n        console.log(\"isTokenLocked err: \");\n        console.log(err);\n        this.setState({\n          isLoading: false\n        });\n      });\n    }\n  }\n\n  lockToken() {\n    if (this.checkNetworkChain()) {\n      console.log('locktoken');\n      this.setState({\n        isLoading: true\n      });\n      this.state.contractInstance.methods.lock().send({\n        from: this.state.account\n      }).then(receipt => {\n        console.log(\"lockToken receipt: \");\n        console.log(receipt);\n        this.setState({\n          isLocked: true,\n          isLoading: false\n        });\n        this.state.setState({\n          isLoading: false\n        });\n      }).catch(err => {\n        this.setState({\n          isLoading: false\n        });\n        console.log(\"lockToken err: \");\n        console.log(err);\n      });\n    }\n  }\n\n  unlockToken() {\n    if (this.checkNetworkChain()) {\n      this.setState({\n        isLoading: true\n      });\n      this.state.contractInstance.methods.unlock().send({\n        from: this.state.account\n      }).then(receipt => {\n        this.setState({\n          isLocked: false,\n          isLoading: false\n        });\n        console.log(\"unlockToken receipt: \");\n        console.log(receipt);\n      }).catch(err => {\n        this.setState({\n          isLoading: false\n        });\n        console.log(\"unlockToken err: \");\n        console.log(err);\n      });\n    }\n  }\n\n  connectMetamask() {\n    this.onConnect();\n  }\n\n  async subscribeProvider() {\n    if (!this.provider.on) {\n      return;\n    }\n\n    this.provider.on(\"accountsChanged\", async accounts => {\n      await this.setState({\n        account: accounts[0]\n      });\n    });\n    this.provider.on(\"chainChanged\", async chainId => {\n      const networkId = await this.web3.eth.net.getId();\n      await this.setState({\n        chainId,\n        networkId\n      });\n    }); // this.provider.on(\"networkChanged\", async (networkId) => {\n    //   const chainId = await this.web3.eth.getChainId();\n    //   await this.setState({ chainId, networkId });\n    // });\n  }\n\n  async checkNetworkChain() {\n    console.log(\"cnetworkId: \" + this.bNetworkId + \"  snetworkId: \" + this.state.networkId + \"  cchainId: \" + this.bChainId + \"  schainId: \" + this.state.chainId);\n\n    if (!(this.state.chainId === this.bNetworkId || this.state.networkId === this.bNetworkId)) {\n      alert(\"Please connect to BSC Chain!\");\n      return false;\n    }\n\n    console.log(\"network true\");\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"backdrop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" Text: \", this.state.isLocked ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Lock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Not Lock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 80\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), !this.state.isConnected ? /*#__PURE__*/_jsxDEV(ConnectBtn, {\n          connectMetamask: this.connectMetamask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Logged as \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), this.state.account]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), !this.state.isLocked ? /*#__PURE__*/_jsxDEV(LockToken, {\n          lockToken: this.lockToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 16\n        }, this) : /*#__PURE__*/_jsxDEV(UnlockToken, {\n          unlockToken: this.unlockToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.isTokenLocked(),\n          className: \"button is-outlined is-small is-danger\",\n          children: \"Check Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js"],"names":["Web3","contractAbi","React","Component","ConnectBtn","LockToken","UnlockToken","Web3Modal","App","constructor","props","bChainId","bNetworkId","state","isConnected","isLocked","contractInstance","account","isLoading","chainId","networkId","contractAddress","providerOptions","web3Modal","network","cacheProvider","connectMetamask","bind","lockToken","unlockToken","isTokenLocked","componentDidMount","cachedProvider","onConnect","componentDidUpdate","connect","then","res","window","ethereum","provider","web3","currentProvider","providers","HttpProvider","subscribeProvider","eth","getAccounts","contract","Contract","getChain","setState","catch","err","console","log","getChainId","net","getId","checkNetworkChain","methods","call","from","receipt","lock","send","unlock","on","accounts","alert","render","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './Tokens/abi'; //nft\nimport React, { Component } from 'react';\nimport ConnectBtn from './Components/ConnectBtn';\nimport LockToken from './Components/LockToken';\nimport UnlockToken from './Components/UnlockToken';\nimport Web3Modal from \"web3modal\";\n\n//import ConnectButton from \"./Components/ConnectButton\";\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.bChainId = '0x61';\n    this.bNetworkId = 97;\n\n    this.state = {\n      isConnected: false,\n      isLocked: false,\n      contractInstance: null,\n      account: null,\n      isLoading: false,\n      chainId: 0, //bsc testnet\n      networkId: '0', //bsc testnet\n      contractAddress: '0xa4a8d3E5A436EE537c83f83c9b70E91242e7a8D7',\n      isLoading: false\n    };\n\n    const providerOptions = {\n    };\n\n    this.web3Modal = new Web3Modal({\n      network: \"mainnet\", // optional\n      cacheProvider: true, // optional\n      providerOptions // required\n    });\n\n    this.connectMetamask = this.connectMetamask.bind(this);\n    this.lockToken = this.lockToken.bind(this);\n    this.unlockToken = this.unlockToken.bind(this);\n    this.isTokenLocked = this.isTokenLocked.bind(this);\n\n  }\n\n  componentDidMount(){\n    if (this.web3Modal.cachedProvider) {\n      this.onConnect();\n    }\n  }\n\n  componentDidUpdate(){\n  }\n\n  async onConnect () {\n    // get metamask provider\n    this.web3Modal.connect().then((res) => {\n      if (window.ethereum){\n        this.provider = window.ethereum;\n      } else if (window.web3){\n        this.provider = window.web3.currentProvider\n      } else {\n        this.provider = new Web3.providers.HttpProvider('http://localhost:8545');\n      }\n      \n      this.subscribeProvider();\n\n      // creste web3 with current provider\n      this.web3 = new Web3(this.provider);\n\n      // retreive account info\n      this.web3.eth.getAccounts().then((res) => {\n\n        // create contract instance\n        const contract = new this.web3.eth.Contract(contractAbi, this.state.contractAddress);\n        \n        // get network chain and check token status\n        this.getChain();\n\n        this.setState({\n          account: res[0],\n          contractInstance: contract,\n          isConnected: true\n        });\n\n      }).catch((err) => {\n        console.log(\"err getAccount: \" + err);  \n      });\n    }).catch((err) => {\n      console.log(\"err web3Modal.connect: \" + err);\n    });\n}\n\n  async getChain(){\n    const chainId =  await this.web3.eth.getChainId();\n    const networkId =  await this.web3.eth.net.getId();\n    await this.setState({chainId: chainId, networkId: networkId});\n    this.isTokenLocked();\n  }\n\n  isTokenLocked() {\n    if(this.checkNetworkChain()){\n      this.setState({isLoading: true});\n      this.state.contractInstance.methods.isLocked().call({\n        from: this.state.account,\n      }).then((receipt) => {\n        console.log(\"isTokenLocked receipt:\")\n        console.log(receipt);\n        this.setState({\n          isLocked: receipt,\n          isLoading: false\n        });\n      }).catch((err) => {\n        console.log(\"isTokenLocked err: \");\n        console.log(err);\n        this.setState({isLoading: false});\n      });\n    }\n  }\n\n  lockToken() {\n    if(this.checkNetworkChain()){\n      console.log('locktoken')\n      this.setState({isLoading: true});\n      this.state.contractInstance.methods.lock().send({\n      from: this.state.account,\n      }).then((receipt) => {\n        console.log(\"lockToken receipt: \");\n        console.log(receipt);\n        this.setState({\n          isLocked: true,\n          isLoading: false\n        });\n        this.state.setState({isLoading: false});\n      }).catch((err) => {\n        this.setState({isLoading: false});\n        console.log(\"lockToken err: \");\n        console.log(err);\n      });\n    }\n  }\n\n  unlockToken() {\n    if(this.checkNetworkChain()){\n        this.setState({isLoading: true});\n        this.state.contractInstance.methods.unlock().send({\n        from: this.state.account,\n      }).then((receipt) => {\n        this.setState({\n          isLocked: false,\n          isLoading: false\n        });\n        console.log(\"unlockToken receipt: \");\n        console.log(receipt);\n      }).catch((err) => {\n        this.setState({isLoading: false});\n        console.log(\"unlockToken err: \");\n        console.log(err);\n      });\n    }\n  }\n\n  connectMetamask() {\n    this.onConnect();\n  }\n\n  async subscribeProvider () {\n    if (!this.provider.on) {\n      return;\n    }\n\n    this.provider.on(\"accountsChanged\", async (accounts) => {\n      await this.setState({ account: accounts[0] });\n    });\n\n    this.provider.on(\"chainChanged\", async (chainId) => {\n      const networkId = await this.web3.eth.net.getId();\n      await this.setState({ chainId, networkId });\n    });\n\n    // this.provider.on(\"networkChanged\", async (networkId) => {\n    //   const chainId = await this.web3.eth.getChainId();\n    //   await this.setState({ chainId, networkId });\n    // });\n  }\n\n  async checkNetworkChain(){\n    console.log(\"cnetworkId: \" + this.bNetworkId + \"  snetworkId: \" + this.state.networkId +\"  cchainId: \" + this.bChainId  + \"  schainId: \" + this.state.chainId);\n    if(!((this.state.chainId === this.bNetworkId) || (this.state.networkId === this.bNetworkId))){\n      alert(\"Please connect to BSC Chain!\");\n      return false;\n    }\n    console.log(\"network true\")\n    return true;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <div class=\"backdrop\"></div>\n          <div> Text: {this.state.isLocked?<div>Lock</div>:<div>Not Lock</div>}<br></br></div>\n          {!this.state.isConnected ? <ConnectBtn \n            connectMetamask={this.connectMetamask}/>\n          : <div>\n              Logged as <br />\n              {this.state.account}\n            </div>\n          }\n          \n          {\n            !this.state.isLocked \n            ?  <LockToken \n                lockToken={this.lockToken}/>\n            : <UnlockToken \n                unlockToken={this.unlockToken}/> \n          }\n            <br></br>\n            <button onClick={() => this.isTokenLocked() } className=\"button is-outlined is-small is-danger\">\n              Check Token\n            </button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}