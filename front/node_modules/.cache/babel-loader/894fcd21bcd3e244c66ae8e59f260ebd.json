{"ast":null,"code":"var _jsxFileName = \"/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './abi'; //nft\n\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.contractAddress = '0x743B0f7FccE1c41661A0118F2cF37Cd500FcdC05';\n\n    if (window.ethereum) {\n      this.web3Provider = window.ethereum;\n\n      try {\n        // Request account access\n        //window.ethereum.enable();\n        window.ethereum.request({\n          method: 'eth_accounts'\n        }).then(res => {});\n      } catch (error) {\n        // User denied account access...\n        console.error(\"User denied account access\");\n      }\n    } // Legacy dapp browsers...\n    else if (window.web3) {\n        this.web3Provider = window.web3.currentProvider;\n      } // If no injected web3 instance is detected, fall back to Ganache\n      else {\n          this.web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');\n        }\n\n    this.web3 = new Web3(this.web3Provider);\n    this.tokenZendr = new this.web3.eth.Contract(contractSlurpee, this.slurpeeAddress);\n    this.contractInstance = new this.web3.eth.Contract(contractAbi, this.contractAddress);\n    this.web3.eth.getAccounts().then(accounts => {\n      [this.account] = accounts;\n    });\n  }\n\n  connectMetamask() {\n    const accounts = window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    this.account = accounts;\n    console.log(\"connectMetamask\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"src/App.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 18\n          }, this), \" and save to reload.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.connectMetamask(),\n          className: \"button is-outlined is-small is-danger\",\n          children: \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js"],"names":["Web3","contractAbi","React","Component","App","constructor","contractAddress","window","ethereum","web3Provider","request","method","then","res","error","console","web3","currentProvider","providers","HttpProvider","tokenZendr","eth","Contract","contractSlurpee","slurpeeAddress","contractInstance","getAccounts","accounts","account","connectMetamask","log","render","logo"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,WAAP,MAAwB,OAAxB,C,CAAiC;;AACjC,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,GAAG;AACZ;AAEF,SAAKC,eAAL,GAAuB,4CAAvB;;AAEA,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,WAAKC,YAAL,GAAoBF,MAAM,CAACC,QAA3B;;AACA,UAAI;AACF;AACA;AACAD,QAAAA,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAxB,EAAoDC,IAApD,CAA0DC,GAAD,IAAS,CAAE,CAApE;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACd;AACAC,QAAAA,OAAO,CAACD,KAAR,CAAc,4BAAd;AACD;AACF,KAVD,CAWA;AAXA,SAYK,IAAIP,MAAM,CAACS,IAAX,EAAiB;AACpB,aAAKP,YAAL,GAAoBF,MAAM,CAACS,IAAP,CAAYC,eAAhC;AACD,OAFI,CAGL;AAHK,WAIA;AACH,eAAKR,YAAL,GAAoB,IAAIT,IAAI,CAACkB,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CAApB;AACD;;AACD,SAAKH,IAAL,GAAY,IAAIhB,IAAJ,CAAS,KAAKS,YAAd,CAAZ;AACA,SAAKW,UAAL,GAAkB,IAAI,KAAKJ,IAAL,CAAUK,GAAV,CAAcC,QAAlB,CAA2BC,eAA3B,EAA4C,KAAKC,cAAjD,CAAlB;AACA,SAAKC,gBAAL,GAAwB,IAAI,KAAKT,IAAL,CAAUK,GAAV,CAAcC,QAAlB,CAA2BrB,WAA3B,EAAwC,KAAKK,eAA7C,CAAxB;AACA,SAAKU,IAAL,CAAUK,GAAV,CAAcK,WAAd,GAA4Bd,IAA5B,CAAkCe,QAAD,IAAc;AAC3C,OAAC,KAAKC,OAAN,IAAiBD,QAAjB;AACD,KAFH;AAGC;;AAEDE,EAAAA,eAAe,GAAE;AACf,UAAMF,QAAQ,GAAGpB,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAxB,CAAjB;AACA,SAAKiB,OAAL,GAAeD,QAAf;AACAZ,IAAAA,OAAO,CAACe,GAAR,CAAY,iBAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,SAAS,EAAC,UAA1B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,2CACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKH,eAAL,EAAvB;AAAgD,UAAA,SAAS,EAAC,uCAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AArDyB;;AAwD5B,eAAezB,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './abi'; //nft\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor() {\n    super();\n  \n  this.contractAddress = '0x743B0f7FccE1c41661A0118F2cF37Cd500FcdC05';\n  \n  if (window.ethereum) {\n    this.web3Provider = window.ethereum;\n    try {\n      // Request account access\n      //window.ethereum.enable();\n      window.ethereum.request({ method: 'eth_accounts' }).then((res) => {});\n    } catch (error) {\n      // User denied account access...\n      console.error(\"User denied account access\")\n    }\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    this.web3Provider = window.web3.currentProvider;\n  }\n  // If no injected web3 instance is detected, fall back to Ganache\n  else {\n    this.web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');\n  }\n  this.web3 = new Web3(this.web3Provider);\n  this.tokenZendr = new this.web3.eth.Contract(contractSlurpee, this.slurpeeAddress);\n  this.contractInstance = new this.web3.eth.Contract(contractAbi, this.contractAddress);\n  this.web3.eth.getAccounts().then((accounts) => {\n      [this.account] = accounts;\n    });\n  }\n\n  connectMetamask(){\n    const accounts = window.ethereum.request({ method: 'eth_requestAccounts' });\n    this.account = accounts;\n    console.log(\"connectMetamask\")\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <button onClick={() => this.connectMetamask() } className=\"button is-outlined is-small is-danger\">\n                        Connect\n          </button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}