{"ast":null,"code":"var _jsxFileName = \"/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './Tokens/abi'; //nft\n\nimport React, { Component } from 'react';\nimport ConnectBtn from './Components/ConnectBtn';\nimport LockToken from './Components/LockToken';\nimport UnlockToken from './Components/UnlockToken';\nimport Web3Modal from \"web3modal\"; //import ConnectButton from \"./Components/ConnectButton\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConnected: false,\n      isLocked: false\n    };\n    const providerOptions = {\n      /* See Provider Options Section */\n    };\n    this.web3Modal = new Web3Modal({\n      network: \"mainnet\",\n      // optional\n      cacheProvider: true,\n      // optional\n      providerOptions // required\n\n    });\n    this.connectMetamask = this.connectMetamask.bind(this);\n    this.lockToken = this.lockToken.bind(this);\n    this.unlockToken = this.unlockToken.bind(this);\n    this.isTokenLocked = this.isTokenLocked.bind(this); // this.disconnectMetamask = this.disconnectMetamask.bind(this);\n    // this.setupWeb3UI = this.setupWeb3UI.bind(this);\n    // this.setupWeb3UI();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // TODO\n    // get connected? if connected render button as username else connect button\n    // get isLocked if locked render as locked ui else render non-lock\n    return {\n      favoritecolor: props.favcol\n    };\n  }\n\n  async onConnect() {\n    return await this.web3Modal.connect();\n  }\n\n  async getAccount() {\n    const accounts = await this.web3.eth.getAccounts();\n    return accounts[0];\n  }\n\n  isTokenLocked() {\n    this.contractInstance.methods.isLocked().send({\n      from: this.account\n    }).then(receipt => {\n      console.log(receipt);\n      this.lock = receipt;\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  lockToken() {\n    this.contractInstance.methods.lock().send({\n      from: this.account\n    }).then(receipt => {\n      console.log(receipt);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  unlockToken() {\n    this.contractInstance.methods.unlock().send({\n      from: this.account\n    }).then(receipt => {\n      console.log(receipt);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  connectMetamask() {\n    this.onConnect().then(res => {\n      this.provider = res;\n      this.web3 = new Web3(this.provider);\n      this.contractAddress = '0x984593222E93D8140DD7A515e947E9806d01D085';\n      this.contractInstance = new this.web3.eth.Contract(contractAbi, this.contractAddress); // retreive account info\n\n      this.getAccount().then(res => {\n        this.account = res;\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  disconnectMetamask() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConnectBtn, {\n          connectMetamask: this.connectMetamask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LockToken, {\n          lockToken: this.lockToken,\n          isTokenLocked: this.isTokenLocked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UnlockToken, {\n          unlockToken: this.unlockToken,\n          isTokenLocked: this.isTokenLocked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), this.lock]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js"],"names":["Web3","contractAbi","React","Component","ConnectBtn","LockToken","UnlockToken","Web3Modal","App","constructor","props","state","isConnected","isLocked","providerOptions","web3Modal","network","cacheProvider","connectMetamask","bind","lockToken","unlockToken","isTokenLocked","getDerivedStateFromProps","favoritecolor","favcol","onConnect","connect","getAccount","accounts","web3","eth","getAccounts","contractInstance","methods","send","from","account","then","receipt","console","log","lock","catch","err","unlock","res","provider","contractAddress","Contract","disconnectMetamask","render","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './Tokens/abi'; //nft\nimport React, { Component } from 'react';\nimport ConnectBtn from './Components/ConnectBtn';\nimport LockToken from './Components/LockToken';\nimport UnlockToken from './Components/UnlockToken';\nimport Web3Modal from \"web3modal\";\n//import ConnectButton from \"./Components/ConnectButton\";\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isConnected: false,\n      isLocked: false\n    };\n\n    const providerOptions = {\n      /* See Provider Options Section */\n    };\n\n    this.web3Modal = new Web3Modal({\n      network: \"mainnet\", // optional\n      cacheProvider: true, // optional\n      providerOptions // required\n    });\n\n    this.connectMetamask = this.connectMetamask.bind(this);\n    this.lockToken = this.lockToken.bind(this);\n    this.unlockToken = this.unlockToken.bind(this);\n    this.isTokenLocked = this.isTokenLocked.bind(this);\n\n    // this.disconnectMetamask = this.disconnectMetamask.bind(this);\n    // this.setupWeb3UI = this.setupWeb3UI.bind(this);\n\n    \n    // this.setupWeb3UI();\n\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // TODO\n    // get connected? if connected render button as username else connect button\n    // get isLocked if locked render as locked ui else render non-lock\n    return {favoritecolor: props.favcol };\n  }\n\n  async onConnect () {\n    return await this.web3Modal.connect();\n  }\n\n  async getAccount() {\n    const accounts = await this.web3.eth.getAccounts();\n    return accounts[0];\n  }\n\n  isTokenLocked() {\n    this.contractInstance.methods.isLocked().send({\n      from: this.account,\n    }).then((receipt) => {\n      console.log(receipt);\n      this.lock = receipt;\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  lockToken() {\n    this.contractInstance.methods.lock().send({\n      from: this.account,\n    }).then((receipt) => {\n      console.log(receipt);\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  unlockToken() {\n    this.contractInstance.methods.unlock().send({\n      from: this.account,\n    }).then((receipt) => {\n      console.log(receipt);\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  connectMetamask() {\n    this.onConnect().then((res) => {\n      this.provider = res\n      this.web3 = new Web3(this.provider);\n      this.contractAddress = '0x984593222E93D8140DD7A515e947E9806d01D085';\n      this.contractInstance = new this.web3.eth.Contract(contractAbi, this.contractAddress);\n      // retreive account info\n      this.getAccount().then((res) => {\n        this.account = res;\n      }).catch((err) => {\n        console.log(err)\n      });\n\n    }).catch((err) => {\n      console.log(err)\n    });\n  }\n\n  disconnectMetamask(){\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          {/* <MenuBar \n          connectMetamask={this.connectMetamask} \n          disconnectMetamask={this.disconnectMetamask} \n          isConnected={this.state.isConnected} /> */}\n          <ConnectBtn \n            connectMetamask={this.connectMetamask}/>\n          <LockToken \n            lockToken={this.lockToken}\n            isTokenLocked={this.isTokenLocked}/>\n          <UnlockToken \n            unlockToken={this.unlockToken}\n            isTokenLocked={this.isTokenLocked}/>\n            {this.lock}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}