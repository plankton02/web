{"ast":null,"code":"var _jsxFileName = \"/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './abi'; //nft\n\nimport React, { Component } from 'react';\nimport MenuBar from './Components/MenuBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.account = null;\n    this.state = {\n      isConnected: true\n    };\n    this.connectMetamask = this.connectMetamask.bind(this);\n    this.disconnectMetamask = this.disconnectMetamask.bind(this); //this.contractAddress = '0x743B0f7FccE1c41661A0118F2cF37Cd500FcdC05';\n  }\n\n  connectMetamask() {\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(res => {\n        this.setState({\n          isConnected: !this.state.isConnected\n        });\n        console.log(res);\n        console.log(\"connectedToMetamask\");\n        this.account = res;\n      }).catch(err => {\n        console.log(err);\n        console.log(\"user denied connectedToMetamask\");\n      });\n    } else {// TODO alert\n    }\n  }\n\n  setupWeb3() {\n    if (window.ethereum) {\n      this.web3Provider = window.ethereum;\n\n      try {\n        // Request account access\n        //window.ethereum.enable();\n        window.ethereum.request({\n          method: 'eth_accounts'\n        }).then(res => {});\n      } catch (error) {\n        // User denied account access...\n        console.error(\"User denied account access\");\n      }\n    } // Legacy dapp browsers...\n    else if (window.web3) {\n        this.web3Provider = window.web3.currentProvider;\n      } // If no injected web3 instance is detected, fall back to Ganache\n      else {\n          this.web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');\n        }\n\n    this.web3 = new Web3(this.web3Provider);\n    this.contractInstance = new this.web3.eth.Contract(contractAbi, this.contractAddress);\n    this.web3.eth.getAccounts().then(accounts => {\n      [this.account] = accounts;\n    });\n  }\n\n  disconnectMetamask() {\n    // ({method: 'disconnect'\n    // }).then((res) => {\n    //   this.setState({isConnected: false});\n    //   console.log(res);\n    // }).catch((err) =>{\n    //   console.log(err);\n    // });\n    window.ethereum.resetApp();\n    this.setState({\n      isConnected: !this.state.isConnected\n    });\n    console.log(window.ethereum);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuBar, {\n          connectMetamask: this.connectMetamask,\n          disconnectMetamask: this.disconnectMetamask,\n          isConnected: this.state.isConnected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js"],"names":["Web3","contractAbi","React","Component","MenuBar","App","constructor","props","account","state","isConnected","connectMetamask","bind","disconnectMetamask","window","ethereum","request","method","then","res","setState","console","log","catch","err","setupWeb3","web3Provider","error","web3","currentProvider","providers","HttpProvider","contractInstance","eth","Contract","contractAddress","getAccounts","accounts","resetApp","render","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './abi'; //nft\nimport React, { Component } from 'react';\nimport MenuBar from './Components/MenuBar';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.account = null;\n    this.state = {\n      isConnected: true\n    };\n    this.connectMetamask = this.connectMetamask.bind(this);\n    this.disconnectMetamask = this.disconnectMetamask.bind(this);\n  \n  //this.contractAddress = '0x743B0f7FccE1c41661A0118F2cF37Cd500FcdC05';\n\n  }\n\n  connectMetamask() {\n    if (window.ethereum) {\n      window.ethereum.request({ method: 'eth_requestAccounts' \n      }).then((res) => {\n        this.setState({isConnected: !this.state.isConnected});\n        console.log(res)\n        console.log(\"connectedToMetamask\")\n        this.account = res;\n      }).catch((err) => {\n        console.log(err)\n        console.log(\"user denied connectedToMetamask\")\n      });    \n    } else {\n      // TODO alert\n    }\n  }\n\n  setupWeb3(){\n  if (window.ethereum) {\n    this.web3Provider = window.ethereum;\n    try {\n      // Request account access\n      //window.ethereum.enable();\n      window.ethereum.request({ method: 'eth_accounts' }).then((res) => {});\n    } catch (error) {\n      // User denied account access...\n      console.error(\"User denied account access\")\n    }\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    this.web3Provider = window.web3.currentProvider;\n  }\n  // If no injected web3 instance is detected, fall back to Ganache\n  else {\n    this.web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');\n  }\n  this.web3 = new Web3(this.web3Provider);\n  this.contractInstance = new this.web3.eth.Contract(contractAbi, this.contractAddress);\n  this.web3.eth.getAccounts().then((accounts) => {\n      [this.account] = accounts;\n    });\n  }\n\n  disconnectMetamask(){\n    // ({method: 'disconnect'\n    // }).then((res) => {\n    //   this.setState({isConnected: false});\n    //   console.log(res);\n    // }).catch((err) =>{\n    //   console.log(err);\n    // });\n    window.ethereum.resetApp();\n    this.setState({isConnected: !this.state.isConnected});\n    console.log(window.ethereum);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <MenuBar \n          connectMetamask={this.connectMetamask} \n          disconnectMetamask={this.disconnectMetamask} \n          isConnected={this.state.isConnected} />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}