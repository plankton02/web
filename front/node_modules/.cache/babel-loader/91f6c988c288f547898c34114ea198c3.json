{"ast":null,"code":"var _jsxFileName = \"/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './Tokens/abi'; //nft\n\nimport React, { Component } from 'react';\nimport MenuBar from './Components/MenuBar';\nimport Web3Modal from \"web3modal\"; //import ConnectButton from \"./Components/ConnectButton\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.account = null; // this.state = {\n    //   isConnected: false\n    // };\n\n    const providerOptions = {\n      /* See Provider Options Section */\n    };\n    this.web3Modal = new Web3Modal({\n      network: \"mainnet\",\n      // optional\n      cacheProvider: true,\n      // optional\n      providerOptions // required\n\n    });\n    this.provider = null;\n    this.onConnect().then(res => {\n      this.provider = res;\n    }).catch(err => {\n      console.log(err);\n    });\n    this.web3 = new Web3(this.provider); // this.connectMetamask = this.connectMetamask.bind(this);\n    // this.disconnectMetamask = this.disconnectMetamask.bind(this);\n    // this.setupWeb3UI = this.setupWeb3UI.bind(this);\n\n    this.contractAddress = '0x984593222E93D8140DD7A515e947E9806d01D085';\n    this.contractInstance = new this.web3.eth.Contract(contractAbi, this.contractAddress); // this.setupWeb3UI();\n\n    this.lockToken();\n  }\n\n  async onConnect() {\n    const provider = null;\n\n    try {\n      provider = await this.web3Modal.connect();\n    } catch (error) {\n      console.log(error);\n    }\n\n    return provider;\n  }\n\n  async getAccount() {\n    const accounts = await web3.eth.getAccounts();\n    this.address = accounts[0];\n  }\n\n  lockToken() {\n    this.contractInstance.methods.isLocked().send({\n      from: this.account\n    }).then(receipt => {\n      console.log(receipt);\n    });\n  }\n\n  connectMetamask() {\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(res => {\n        this.setupWeb3UI();\n        console.log(\"connectedToMetamask\");\n        this.account = res;\n        console.log(this.account);\n        this.setupWeb3();\n      }).catch(err => {\n        console.log(err);\n        console.log(\"user denied connectedToMetamask\");\n      });\n    } else {// TODO alert\n    }\n  }\n\n  setupWeb3UI() {\n    if (window.ethereum.isConnected() && !this.state.isConnected) {\n      // T T T,T F T, F T F, F F F \n      this.setState({\n        isConnected: !this.state.isConnected\n      });\n    } else if (!window.ethereum.isConnected() && this.state.isConnected) {\n      this.setState({\n        isConnected: !this.state.isConnected\n      });\n    } else if (!window.ethereum.isConnected() && !this.state.isConnected) {\n      this.setState({\n        isConnected: this.state.isConnected\n      });\n    }\n  }\n\n  setupWeb3() {\n    if (window.ethereum) {\n      this.web3Provider = window.ethereum;\n    } // Legacy dapp browsers...\n    // else if (window.web3) {\n    //   this.web3Provider = window.web3.currentProvider;\n    // }\n    // If no injected web3 instance is detected, fall back to Ganache\n    else {\n        this.web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');\n      }\n\n    this.web3 = new Web3(this.web3Provider);\n    this.contractInstance = new this.web3.eth.Contract(contractAbi, this.contractAddress); // this.web3.eth.getAccounts().then((accounts) => {\n    //     [this.account] = accounts;\n    //   });\n  }\n\n  disconnectMetamask() {\n    // ({method: 'disconnect'\n    // }).then((res) => {\n    //   this.setState({isConnected: false});\n    //   console.log(res);\n    // }).catch((err) =>{\n    //   console.log(err);\n    // });\n    this.setState({\n      isConnected: !this.state.isConnected\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js"],"names":["Web3","contractAbi","React","Component","MenuBar","Web3Modal","App","constructor","props","account","providerOptions","web3Modal","network","cacheProvider","provider","onConnect","then","res","catch","err","console","log","web3","contractAddress","contractInstance","eth","Contract","lockToken","connect","error","getAccount","accounts","getAccounts","address","methods","isLocked","send","from","receipt","connectMetamask","window","ethereum","request","method","setupWeb3UI","setupWeb3","isConnected","state","setState","web3Provider","providers","HttpProvider","disconnectMetamask","render","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './Tokens/abi'; //nft\nimport React, { Component } from 'react';\nimport MenuBar from './Components/MenuBar';\nimport Web3Modal from \"web3modal\";\n//import ConnectButton from \"./Components/ConnectButton\";\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.account = null;\n\n    // this.state = {\n    //   isConnected: false\n    // };\n\n    const providerOptions = {\n      /* See Provider Options Section */\n    };\n\n    this.web3Modal = new Web3Modal({\n      network: \"mainnet\", // optional\n      cacheProvider: true, // optional\n      providerOptions // required\n    });\n\n    this.provider = null;\n\n    this.onConnect()\n    .then((res) => {\n      this.provider = res\n    }).catch((err) => {\n      console.log(err)\n    });\n\n    this.web3 = new Web3(this.provider);\n\n    // this.connectMetamask = this.connectMetamask.bind(this);\n    // this.disconnectMetamask = this.disconnectMetamask.bind(this);\n    // this.setupWeb3UI = this.setupWeb3UI.bind(this);\n\n    this.contractAddress = '0x984593222E93D8140DD7A515e947E9806d01D085';\n    this.contractInstance = new this.web3.eth.Contract(contractAbi, this.contractAddress);\n    // this.setupWeb3UI();\n    this.lockToken();\n\n  }\n\n  async onConnect () {\n    const provider = null;\n    try {\n      provider = await this.web3Modal.connect();\n    } catch (error) {\n      console.log(error);\n    }\n    return provider;\n  }\n\n  async getAccount() {\n    const accounts = await web3.eth.getAccounts();\n    this.address = accounts[0];\n  }\n\n  lockToken() {\n    this.contractInstance.methods.isLocked().send({\n       from: this.account,\n    }).then((receipt) => {\n      console.log(receipt);\n    });\n  }\n\n  connectMetamask() {\n    if (window.ethereum) {\n      window.ethereum.request({ method: 'eth_requestAccounts' \n      }).then((res) => {\n        this.setupWeb3UI();\n        console.log(\"connectedToMetamask\");\n        this.account = res;\n        console.log(this.account);\n        this.setupWeb3();\n      }).catch((err) => {\n        console.log(err)\n        console.log(\"user denied connectedToMetamask\")\n      });    \n    } else {\n      // TODO alert\n    }\n  }\n\n  setupWeb3UI(){\n    if(window.ethereum.isConnected() && !this.state.isConnected){ // T T T,T F T, F T F, F F F \n      this.setState({isConnected: !this.state.isConnected});\n    } else if(!window.ethereum.isConnected() && this.state.isConnected) {\n      this.setState({isConnected: !this.state.isConnected});\n    } else if(!window.ethereum.isConnected() && !this.state.isConnected) {\n      this.setState({isConnected: this.state.isConnected});\n    }\n\n  }\n\n  setupWeb3(){\n  if (window.ethereum) {\n    this.web3Provider = window.ethereum;\n  }\n  // Legacy dapp browsers...\n  // else if (window.web3) {\n  //   this.web3Provider = window.web3.currentProvider;\n  // }\n  // If no injected web3 instance is detected, fall back to Ganache\n  else {\n    this.web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');\n  }\n  this.web3 = new Web3(this.web3Provider);\n  this.contractInstance = new this.web3.eth.Contract(contractAbi, this.contractAddress);\n  // this.web3.eth.getAccounts().then((accounts) => {\n  //     [this.account] = accounts;\n  //   });\n  }\n\n  disconnectMetamask(){\n    // ({method: 'disconnect'\n    // }).then((res) => {\n    //   this.setState({isConnected: false});\n    //   console.log(res);\n    // }).catch((err) =>{\n    //   console.log(err);\n    // });\n    this.setState({isConnected: !this.state.isConnected});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          {/* <MenuBar \n          connectMetamask={this.connectMetamask} \n          disconnectMetamask={this.disconnectMetamask} \n          isConnected={this.state.isConnected} /> */}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}