{"ast":null,"code":"var _jsxFileName = \"/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './Tokens/abi'; //nft\n\nimport React, { Component } from 'react';\nimport ConnectBtn from './Components/ConnectBtn';\nimport LockToken from './Components/LockToken';\nimport UnlockToken from './Components/UnlockToken';\nimport Web3Modal from \"web3modal\"; //import ConnectButton from \"./Components/ConnectButton\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConnected: false,\n      isLocked: false,\n      contractInstance: null\n    };\n    const providerOptions = {\n      /* See Provider Options Section */\n    };\n    this.web3Modal = new Web3Modal({\n      network: \"mainnet\",\n      // optional\n      cacheProvider: true,\n      // optional\n      providerOptions // required\n\n    });\n    this.connectMetamask = this.connectMetamask.bind(this);\n    this.lockToken = this.lockToken.bind(this);\n    this.unlockToken = this.unlockToken.bind(this);\n    this.isTokenLocked = this.isTokenLocked.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.web3Modal.cachedProvider) {\n      this.onConnect();\n    }\n  }\n\n  componentDidUpdate() {}\n\n  async onConnect() {\n    try {\n      await this.web3Modal.connect();\n      this.setState({\n        isConnected: true\n      });\n    } catch (error) {\n      this.setState({\n        isConnected: false\n      });\n      console.log(error);\n    }\n  }\n\n  async getAccount() {\n    const accounts = await this.web3.eth.getAccounts();\n    return accounts[0];\n  }\n\n  isTokenLocked() {\n    this.state.contractInstance.methods.isLocked().call({\n      from: this.account\n    }).then(receipt => {\n      console.log(receipt);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  lockToken() {\n    this.state.contractInstance.methods.lock().send({\n      from: this.account\n    }).then(receipt => {\n      console.log(receipt);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  unlockToken() {\n    console.log(this.contractInstance);\n    this.state.contractInstance.methods.unlock().send({\n      from: this.account\n    }).then(receipt => {\n      console.log(receipt);\n      this.setState({\n        isConnected: false\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  connectMetamask() {\n    this.onConnect().then(res => {\n      this.provider = res;\n      this.web3 = new Web3(this.provider);\n      this.contractAddress = '0x984593222E93D8140DD7A515e947E9806d01D085';\n      const contract = new this.web3.eth.Contract(contractAbi, this.contractAddress);\n      this.setState({\n        contractInstance: contract\n      }); // retreive account info\n\n      this.getAccount().then(res => {\n        this.account = res;\n        this.setState({\n          isConnected: true\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  disconnectMetamask() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" Text: \", this.state.isConnected]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), !this.state.isConnected ? /*#__PURE__*/_jsxDEV(ConnectBtn, {\n          connectMetamask: this.connectMetamask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Logged in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LockToken, {\n          lockToken: this.lockToken,\n          isTokenLocked: this.isTokenLocked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UnlockToken, {\n          unlockToken: this.unlockToken,\n          isTokenLocked: this.isTokenLocked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js"],"names":["Web3","contractAbi","React","Component","ConnectBtn","LockToken","UnlockToken","Web3Modal","App","constructor","props","state","isConnected","isLocked","contractInstance","providerOptions","web3Modal","network","cacheProvider","connectMetamask","bind","lockToken","unlockToken","isTokenLocked","componentDidMount","cachedProvider","onConnect","componentDidUpdate","connect","setState","error","console","log","getAccount","accounts","web3","eth","getAccounts","methods","call","from","account","then","receipt","catch","err","lock","send","unlock","res","provider","contractAddress","contract","Contract","disconnectMetamask","render","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './Tokens/abi'; //nft\nimport React, { Component } from 'react';\nimport ConnectBtn from './Components/ConnectBtn';\nimport LockToken from './Components/LockToken';\nimport UnlockToken from './Components/UnlockToken';\nimport Web3Modal from \"web3modal\";\n//import ConnectButton from \"./Components/ConnectButton\";\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isConnected: false,\n      isLocked: false,\n      contractInstance: null\n    };\n\n    const providerOptions = {\n      /* See Provider Options Section */\n    };\n\n    this.web3Modal = new Web3Modal({\n      network: \"mainnet\", // optional\n      cacheProvider: true, // optional\n      providerOptions // required\n    });\n\n    this.connectMetamask = this.connectMetamask.bind(this);\n    this.lockToken = this.lockToken.bind(this);\n    this.unlockToken = this.unlockToken.bind(this);\n    this.isTokenLocked = this.isTokenLocked.bind(this);\n  }\n\n  componentDidMount(){\n    if (this.web3Modal.cachedProvider) {\n      this.onConnect();\n    }\n  }\n\n  componentDidUpdate(){\n\n  }\n\n  async onConnect () {\n    try {\n      await this.web3Modal.connect();\n      this.setState({isConnected: true});\n    } catch (error) {\n      this.setState({isConnected: false});\n      console.log(error)\n    } \n\n  }\n\n  async getAccount() {\n    const accounts = await this.web3.eth.getAccounts();\n    return accounts[0];\n  }\n\n  isTokenLocked() {\n    this.state.contractInstance.methods.isLocked().call({\n      from: this.account,\n    }).then((receipt) => {\n      console.log(receipt);\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  lockToken() {\n    this.state.contractInstance.methods.lock().send({\n      from: this.account,\n    }).then((receipt) => {\n      console.log(receipt);\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  unlockToken() {\n    console.log(this.contractInstance)\n    this.state.contractInstance.methods.unlock().send({\n      from: this.account,\n    }).then((receipt) => {\n      console.log(receipt);\n      this.setState({isConnected: false});\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  connectMetamask() {\n    this.onConnect().then((res) => {\n      this.provider = res\n      this.web3 = new Web3(this.provider);\n      this.contractAddress = '0x984593222E93D8140DD7A515e947E9806d01D085';\n      const contract = new this.web3.eth.Contract(contractAbi, this.contractAddress);\n      this.setState({contractInstance: contract});\n      // retreive account info\n      this.getAccount().then((res) => {\n        this.account = res;\n        this.setState({isConnected: true});\n      }).catch((err) => {\n        console.log(err)\n      });\n\n    }).catch((err) => {\n      console.log(err)\n    });\n  }\n\n  disconnectMetamask(){\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <div> Text: {this.state.isConnected}</div>\n          {!this.state.isConnected ? <ConnectBtn \n            connectMetamask={this.connectMetamask}/>\n          : <div>Logged in</div>}\n          <LockToken \n            lockToken={this.lockToken}\n            isTokenLocked={this.isTokenLocked}/>\n          <UnlockToken \n            unlockToken={this.unlockToken}\n            isTokenLocked={this.isTokenLocked}/>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}