{"ast":null,"code":"var _jsxFileName = \"/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './abi'; //nft\n\nimport React, { Component } from 'react';\nimport MenuBar from './Components/MenuBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.account = null;\n    this.state = {\n      isConnected: false\n    };\n    this.connectMetamask = this.connectMetamask.bind(this);\n    this.disconnectMetamask = this.disconnectMetamask.bind(this);\n    this.setupWeb3UI = this.setupWeb3UI.bind(this); //this.contractAddress = '0x743B0f7FccE1c41661A0118F2cF37Cd500FcdC05';\n\n    this.setupWeb3UI();\n    console.log(window.ethereum.isConnected());\n  }\n\n  connectMetamask() {\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(res => {\n        this.setupWeb3UI();\n        console.log(\"connectedToMetamask\");\n        this.account = res;\n        console.log(this.account);\n        this.setupWeb3();\n      }).catch(err => {\n        console.log(err);\n        console.log(\"user denied connectedToMetamask\");\n      });\n    } else {// TODO alert\n    }\n  }\n\n  setupWeb3UI() {\n    if (window.ethereum.isConnected() && !this.state.isConnected) {\n      // T T T,T F T, F T F, F F F \n      this.setState({\n        isConnected: !this.state.isConnected\n      });\n    } else if (!window.ethereum.isConnected() && this.state.isConnected) {\n      this.setState({\n        isConnected: !this.state.isConnected\n      });\n    } else if (!window.ethereum.isConnected() && !this.state.isConnected) {\n      this.setState({\n        isConnected: this.state.isConnected\n      });\n    }\n  }\n\n  setupWeb3() {\n    if (window.ethereum) {\n      this.web3Provider = window.ethereum;\n    } // Legacy dapp browsers...\n    // else if (window.web3) {\n    //   this.web3Provider = window.web3.currentProvider;\n    // }\n    // If no injected web3 instance is detected, fall back to Ganache\n    else {\n        this.web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');\n      }\n\n    this.web3 = new Web3(this.web3Provider);\n    this.contractInstance = new this.web3.eth.Contract(contractAbi, this.contractAddress); // this.web3.eth.getAccounts().then((accounts) => {\n    //     [this.account] = accounts;\n    //   });\n  }\n\n  disconnectMetamask() {\n    // ({method: 'disconnect'\n    // }).then((res) => {\n    //   this.setState({isConnected: false});\n    //   console.log(res);\n    // }).catch((err) =>{\n    //   console.log(err);\n    // });\n    this.setState({\n      isConnected: !this.state.isConnected\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuBar, {\n          connectMetamask: this.connectMetamask,\n          disconnectMetamask: this.disconnectMetamask,\n          isConnected: this.state.isConnected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js"],"names":["Web3","contractAbi","React","Component","MenuBar","App","constructor","props","account","state","isConnected","connectMetamask","bind","disconnectMetamask","setupWeb3UI","console","log","window","ethereum","request","method","then","res","setupWeb3","catch","err","setState","web3Provider","providers","HttpProvider","web3","contractInstance","eth","Contract","contractAddress","render","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './abi'; //nft\nimport React, { Component } from 'react';\nimport MenuBar from './Components/MenuBar';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.account = null;\n    this.state = {\n      isConnected: false\n    };\n    this.connectMetamask = this.connectMetamask.bind(this);\n    this.disconnectMetamask = this.disconnectMetamask.bind(this);\n    this.setupWeb3UI = this.setupWeb3UI.bind(this);\n\n  //this.contractAddress = '0x743B0f7FccE1c41661A0118F2cF37Cd500FcdC05';\n    this.setupWeb3UI();\n    console.log(window.ethereum.isConnected())\n  }\n\n  connectMetamask() {\n    if (window.ethereum) {\n      window.ethereum.request({ method: 'eth_requestAccounts' \n      }).then((res) => {\n        this.setupWeb3UI();\n        console.log(\"connectedToMetamask\");\n        this.account = res;\n        console.log(this.account);\n        this.setupWeb3();\n      }).catch((err) => {\n        console.log(err)\n        console.log(\"user denied connectedToMetamask\")\n      });    \n    } else {\n      // TODO alert\n    }\n  }\n\n  setupWeb3UI(){\n    if(window.ethereum.isConnected() && !this.state.isConnected){ // T T T,T F T, F T F, F F F \n      this.setState({isConnected: !this.state.isConnected});\n    } else if(!window.ethereum.isConnected() && this.state.isConnected) {\n      this.setState({isConnected: !this.state.isConnected});\n    } else if(!window.ethereum.isConnected() && !this.state.isConnected) {\n      this.setState({isConnected: this.state.isConnected});\n    }\n  }\n\n  setupWeb3(){\n  if (window.ethereum) {\n    this.web3Provider = window.ethereum;\n  }\n  // Legacy dapp browsers...\n  // else if (window.web3) {\n  //   this.web3Provider = window.web3.currentProvider;\n  // }\n  // If no injected web3 instance is detected, fall back to Ganache\n  else {\n    this.web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');\n  }\n  this.web3 = new Web3(this.web3Provider);\n  this.contractInstance = new this.web3.eth.Contract(contractAbi, this.contractAddress);\n  // this.web3.eth.getAccounts().then((accounts) => {\n  //     [this.account] = accounts;\n  //   });\n  }\n\n  disconnectMetamask(){\n    // ({method: 'disconnect'\n    // }).then((res) => {\n    //   this.setState({isConnected: false});\n    //   console.log(res);\n    // }).catch((err) =>{\n    //   console.log(err);\n    // });\n    this.setState({isConnected: !this.state.isConnected});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <MenuBar \n          connectMetamask={this.connectMetamask} \n          disconnectMetamask={this.disconnectMetamask} \n          isConnected={this.state.isConnected} />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}