{"ast":null,"code":"var _jsxFileName = \"/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './abi'; //nft\n\nimport React, { Component } from 'react';\nimport MenuBar from './Components/MenuBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConnected: false\n    };\n    this.connectMetamask = this.connectMetamask.bind(this); //this.contractAddress = '0x743B0f7FccE1c41661A0118F2cF37Cd500FcdC05';\n    // if (window.ethereum) {\n    //   this.web3Provider = window.ethereum;\n    //   try {\n    //     // Request account access\n    //     //window.ethereum.enable();\n    //     window.ethereum.request({ method: 'eth_accounts' }).then((res) => {});\n    //   } catch (error) {\n    //     // User denied account access...\n    //     console.error(\"User denied account access\")\n    //   }\n    // }\n    // // Legacy dapp browsers...\n    // else if (window.web3) {\n    //   this.web3Provider = window.web3.currentProvider;\n    // }\n    // // If no injected web3 instance is detected, fall back to Ganache\n    // else {\n    //   this.web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');\n    // }\n    // this.web3 = new Web3(this.web3Provider);\n    // this.contractInstance = new this.web3.eth.Contract(contractAbi, this.contractAddress);\n    // this.web3.eth.getAccounts().then((accounts) => {\n    //     [this.account] = accounts;\n    //   });\n  }\n\n  connectMetamask() {\n    console.log(window.ethereum);\n    window.ethereum.request({\n      method: 'eth_requestAccounts'\n    }).then(res => {\n      this.setState({\n        isConnected: true\n      });\n      console.log(res);\n      console.log(\"connectedToMetamask\");\n    }).catch(err => {\n      console.log(err);\n      console.log(\"user denied connectedToMetamask\");\n    });\n  }\n\n  disconnectMetamask() {\n    // ({method: 'disconnect'\n    // }).then((res) => {\n    //   this.setState({isConnected: false});\n    //   console.log(res);\n    // }).catch((err) =>{\n    //   console.log(err);\n    // });\n    window.ethereum.isConnected = false;\n    console.log(window.ethereum);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuBar, {\n          connectMetamask: this.connectMetamask,\n          disconnectMetamask: this.disconnectMetamask,\n          isConnected: this.state.isConnected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/killua/workspaces/slurpee-finance/pkub-app/front/src/App.js"],"names":["Web3","contractAbi","React","Component","MenuBar","App","constructor","props","state","isConnected","connectMetamask","bind","console","log","window","ethereum","request","method","then","res","setState","catch","err","disconnectMetamask","render","logo"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,WAAP,MAAwB,OAAxB,C,CAAiC;;AACjC,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAE1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB,CALiB,CAOnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;AAEDD,EAAAA,eAAe,GAAG;AAChBE,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,QAAnB;AACAD,IAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAxB,EACGC,IADH,CACSC,GAAD,IAAS;AACf,WAAKC,QAAL,CAAc;AAACX,QAAAA,WAAW,EAAE;AAAd,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KALD,EAKGQ,KALH,CAKUC,GAAD,IAAS;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD,KARD;AASD;;AAEDU,EAAAA,kBAAkB,GAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,IAAAA,MAAM,CAACC,QAAP,CAAgBN,WAAhB,GAA8B,KAA9B;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,QAAnB;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,SAAS,EAAC,UAA1B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AACA,UAAA,eAAe,EAAE,KAAKf,eADtB;AAEA,UAAA,kBAAkB,EAAE,KAAKa,kBAFzB;AAGA,UAAA,WAAW,EAAE,KAAKf,KAAL,CAAWC;AAHxB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA3EyB;;AA8E5B,eAAeJ,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Web3 from 'web3';\nimport contractAbi from './abi'; //nft\nimport React, { Component } from 'react';\nimport MenuBar from './Components/MenuBar';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConnected: false\n    };\n    this.connectMetamask = this.connectMetamask.bind(this);\n  \n  //this.contractAddress = '0x743B0f7FccE1c41661A0118F2cF37Cd500FcdC05';\n\n  // if (window.ethereum) {\n  //   this.web3Provider = window.ethereum;\n  //   try {\n  //     // Request account access\n  //     //window.ethereum.enable();\n  //     window.ethereum.request({ method: 'eth_accounts' }).then((res) => {});\n  //   } catch (error) {\n  //     // User denied account access...\n  //     console.error(\"User denied account access\")\n  //   }\n  // }\n  // // Legacy dapp browsers...\n  // else if (window.web3) {\n  //   this.web3Provider = window.web3.currentProvider;\n  // }\n  // // If no injected web3 instance is detected, fall back to Ganache\n  // else {\n  //   this.web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');\n  // }\n  // this.web3 = new Web3(this.web3Provider);\n  // this.contractInstance = new this.web3.eth.Contract(contractAbi, this.contractAddress);\n  // this.web3.eth.getAccounts().then((accounts) => {\n  //     [this.account] = accounts;\n  //   });\n  }\n\n  connectMetamask() {\n    console.log(window.ethereum);\n    window.ethereum.request({ method: 'eth_requestAccounts' \n    }).then((res) => {\n      this.setState({isConnected: true});\n      console.log(res)\n      console.log(\"connectedToMetamask\")\n    }).catch((err) => {\n      console.log(err)\n      console.log(\"user denied connectedToMetamask\")\n    });    \n  }\n\n  disconnectMetamask(){\n    // ({method: 'disconnect'\n    // }).then((res) => {\n    //   this.setState({isConnected: false});\n    //   console.log(res);\n    // }).catch((err) =>{\n    //   console.log(err);\n    // });\n    window.ethereum.isConnected = false;\n    \n    console.log(window.ethereum);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <MenuBar \n          connectMetamask={this.connectMetamask} \n          disconnectMetamask={this.disconnectMetamask} \n          isConnected={this.state.isConnected} />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}